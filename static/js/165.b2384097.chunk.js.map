{"version":3,"file":"static/js/165.b2384097.chunk.js","mappings":"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","sources":["components/BackAppBar/BackAppBar.jsx","components/AddContactForm/AddContactForm.jsx","pages/AddContact/AddContact.jsx"],"sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport ArrowBackIos from '@mui/icons-material/ArrowBackIos';\nimport Container from '@mui/material/Container';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const BackAppBar = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar>\n        <Container maxWidth=\"xl\">\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n              component={Link}\n              to={backLinkHref}\n            >\n              <ArrowBackIos />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              Phonebook\n            </Typography>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/contacts';\nimport { addContactOperation } from 'redux/contacts';\nimport { useNavigate } from 'react-router-dom';\n\nconst regExName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst regExNumber =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\n      regExName,\n      'Name may contain only letters, apostrophe, dash and spaces.'\n    )\n    .required('Name required'),\n  number: Yup.string()\n    .matches(\n      regExNumber,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Phone number required'),\n});\n\nconst theme = createTheme();\n\nexport function AddContactForm() {\n  const navigate = useNavigate();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleFormSubmit = ({ name, number }, { resetForm }) => {\n    let error = null;\n    if (contacts.find(e => e.name === name)) {\n      error = `Contact name ${name} is being used`;\n    }\n    dispatch(addContactOperation({ name, number, error }))\n      .unwrap()\n      .then(() => {\n        navigate('/contacts');\n      })\n      .catch();\n    resetForm();\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: handleFormSubmit,\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 12,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            New Contact\n          </Typography>\n          <Box\n            component=\"form\"\n            // noValidate\n            onSubmit={formik.handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"name\"\n                  label=\"Contacts name\"\n                  name=\"name\"\n                  variant=\"standard\"\n                  value={formik.values.name}\n                  onChange={formik.handleChange}\n                  error={formik.touched.name && Boolean(formik.errors.name)}\n                  helperText={formik.touched.name && formik.errors.name}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"number\"\n                  label=\"Phone number\"\n                  name=\"number\"\n                  variant=\"standard\"\n                  value={formik.values.number}\n                  onChange={formik.handleChange}\n                  error={formik.touched.number && Boolean(formik.errors.number)}\n                  helperText={formik.touched.number && formik.errors.number}\n                />\n              </Grid>\n            </Grid>\n            <LoadingButton\n              type=\"submit\"\n              loading={isLoading}\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 8, mb: 2 }}\n            >\n              Save\n            </LoadingButton>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import { AddContactForm } from 'components/AddContactForm/AddContactForm';\nimport { BackAppBar } from 'components/BackAppBar/BackAppBar';\n\nconst AddContact = () => {\n  return (\n    <>\n      <BackAppBar />\n      <AddContactForm sx={{ mt: 4 }} />\n    </>\n  );\n};\n\nexport default AddContact;\n"],"names":["BackAppBar","backLinkHref","useLocation","state","from","sx","flexGrow","maxWidth","size","edge","color","mr","component","Link","to","variant","validationSchema","Yup","shape","name","matches","required","number","theme","createTheme","AddContactForm","navigate","useNavigate","contacts","useSelector","selectContacts","isLoading","selectIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","resetForm","error","find","e","addContactOperation","unwrap","then","catch","ThemeProvider","Container","CssBaseline","Box","marginTop","display","flexDirection","alignItems","Typography","handleSubmit","mt","Grid","container","spacing","item","xs","TextField","fullWidth","id","label","value","values","onChange","handleChange","touched","Boolean","errors","helperText","LoadingButton","type","loading","mb"],"sourceRoot":""}